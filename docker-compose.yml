version: '3.1'
services:
  dbpostgresql:
    image: "postgres:12"
    container_name: dbpostgresql
    networks:
      - spring-pgsql
    ports:
      - "5432:5432"
    volumes: 
      - ../docker-pg-vol/data:/var/lib/postgresql/data
      - ../init/initData.sql:/docker-entrypoint-initdb.d/initData.sql
      - /Users/path/docker/postgres/docker-pg-vol/data:/var/lib/postgresql/data
      - /Users/path/docker/postgres/init/initData.sql:/docker-entrypoint-initdb.d/initData.sql
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
      #URL	jdbc:postgresql://localhost:5432/postgres

  flyway:
    container_name: flyway
    image: flyway/flyway
    command: migrate -X
    environment:
      FLYWAY_SCHEMAS: "public"
    restart: on-failure
    volumes:
      - ./flyway-postgres.conf:/flyway/conf/flyway.conf
      - ../resources/db/migration:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy

  app:
    container_name: rest-api
    image: rest-api
    networks:
      - spring-pgsql
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - dbpostgresql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresql:5432/spring_creation
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

networks:
  spring-pgsql: